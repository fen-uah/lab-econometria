Este espacio recopila bases de datos relevantes para los cursos de **Econometría**.
library(readxl)
library(DT)
# Leer el Excel con la información
bases <- read_excel("data/bases_datos.xlsx")
# Mostrar como tabla interactiva
datatable(
bases,
options = list(pageLength = 10, autoWidth = TRUE),
escape = FALSE
)
```{r, echo=FALSE}
library(readxl)
library(DT)
# Leer el Excel con la información
bases <- read_excel("data/bases_datos.xlsx")
# Mostrar como tabla interactiva
datatable(
bases,
options = list(pageLength = 10, autoWidth = TRUE),
escape = FALSE
)
library(readxl)
library(DT)
# Leer el Excel con la información
bases <- read_excel("data/bases_datos.xlsx")
# Mostrar como tabla interactiva
datatable(
bases,
options = list(pageLength = 10, autoWidth = TRUE),
escape = FALSE
)
library(readxl)
library(DT)
# Leer el Excel con la información
bases <- read_excel("data/bases_datos.xlsx")
# Mostrar como tabla interactiva
datatable(
bases,
options = list(pageLength = 10, autoWidth = TRUE),
escape = FALSE
)
View(bases)
library(readxl)
library(dplyr)
library(DT)
library(stringr)
# Lee el Excel y renombra la columna (por el espacio y la barra)
bases <- read_excel("data/bases_datos.xlsx") |>
rename(Link = `Fuente / Link`) |>
mutate(
# Asegura el prefijo http/https si faltara
Link = if_else(!is.na(Link) & Link != "" & !str_detect(Link, "^https?://"),
paste0("https://", Link), Link),
# Convierte a enlace HTML (texto = "Abrir")
Link = if_else(!is.na(Link) & Link != "",
sprintf("<a href='%s' target='_blank' rel='noopener'>Abrir</a>", Link),
"")
)
datatable(
bases,
escape = FALSE,                # <- clave para que renderice el <a>
options = list(pageLength = 10, autoWidth = TRUE)
)
library(readxl)
library(dplyr)
library(DT)
library(stringr)
# Lee el Excel y renombra la columna (por el espacio y la barra)
bases <- read.csv("data/bases_datos.csv") |>
rename(Link = `Fuente / Link`) |>
mutate(
# Asegura el prefijo http/https si faltara
Link = if_else(!is.na(Link) & Link != "" & !str_detect(Link, "^https?://"),
paste0("https://", Link), Link),
# Convierte a enlace HTML (texto = "Abrir")
Link = if_else(!is.na(Link) & Link != "",
sprintf("<a href='%s' target='_blank' rel='noopener'>Abrir</a>", Link),
"")
)
library(readxl)
library(dplyr)
library(DT)
library(stringr)
# Lee el Excel y renombra la columna (por el espacio y la barra)
bases <- read.csv("data/bases_datos.csv") |>
rename(Link = `Fuente / Link`) |>
mutate(
# Asegura el prefijo http/https si faltara
Link = if_else(!is.na(Link) & Link != "" & !str_detect(Link, "^https?://"),
paste0("https://", Link), Link),
# Convierte a enlace HTML (texto = "Abrir")
Link = if_else(!is.na(Link) & Link != "",
sprintf("<a href='%s' target='_blank' rel='noopener'>Abrir</a>", Link),
"")
)
library(readr)
library(dplyr)
library(DT)
library(stringr)
# Lee el Excel y renombra la columna (por el espacio y la barra)
bases <- read.csv("data/bases_datos.csv") |>
rename(Link = `Fuente / Link`) |>
mutate(
# Asegura el prefijo http/https si faltara
Link = if_else(!is.na(Link) & Link != "" & !str_detect(Link, "^https?://"),
paste0("https://", Link), Link),
# Convierte a enlace HTML (texto = "Abrir")
Link = if_else(!is.na(Link) & Link != "",
sprintf("<a href='%s' target='_blank' rel='noopener'>Abrir</a>", Link),
"")
)
#| message: false
#| warning: false
library(readr)
library(dplyr)
library(DT)
# Leer CSV
bases <- read_csv("data/bases_datos.csv")
#| message: false
#| warning: false
library(readr)
library(dplyr)
library(DT)
# Leer CSV
bases <- read_csv("data/bases_datos.csv")
#| message: false
#| warning: false
library(readxl)
library(dplyr)
library(DT)
# Leer el archivo Excel
bases <- read_excel("data/bases_datos.xlsx")
# Convertir la columna "Fuente / Link" en hipervínculo
bases <- bases |>
mutate(
`Fuente / Link` = if_else(!is.na(`Fuente / Link`) & `Fuente / Link` != "",
sprintf("<a href='%s' target='_blank' rel='noopener'>%s</a>", `Fuente / Link`, `Fuente / Link`),
"")
)
# Mostrar tabla interactiva
datatable(
bases,
escape = FALSE,  # <- necesario para que los <a> funcionen como links
options = list(pageLength = 10, autoWidth = TRUE)
)
#| message: false
#| warning: false
library(readxl)
library(dplyr)
library(DT)
# Leer el archivo Excel
bases <- read_excel("data/bases_datos.xlsx")
# Convertir la columna "Fuente / Link" en hipervínculo con texto fijo
bases <- bases |>
mutate(
`Fuente / Link` = if_else(
!is.na(`Fuente / Link`) & `Fuente / Link` != "",
sprintf("<a href='%s' target='_blank' rel='noopener'>Enlace</a>", `Fuente / Link`),
""
)
)
# Mostrar tabla interactiva con todas las columnas
datatable(
bases,
escape = FALSE,  # <- necesario para que los <a> funcionen como links
options = list(pageLength = 10, autoWidth = TRUE, scrollX = TRUE)
)
#| message: false
#| warning: false
library(readxl)
library(dplyr)
library(DT)
# Leer el archivo Excel
bases <- read_excel("data/bases_datos.xlsx")
# Convertir la columna "Fuente / Link" en hipervínculo con texto fijo
bases <- bases |>
mutate(
`Fuente / Link` = if_else(
!is.na(`Fuente / Link`) & `Fuente / Link` != "",
sprintf("<a href='%s' target='_blank' rel='noopener'>Enlace</a>", `Fuente / Link`),
""
)
)
# Mostrar tabla interactiva con todas las columnas
datatable(
bases,
escape = FALSE,  # <- necesario para que los <a> funcionen como links
options = list(pageLength = 10, autoWidth = TRUE, scrollX = TRUE)
)
#| message: false
#| warning: false
library(readxl)
library(dplyr)
library(DT)
# Leer el archivo Excel
bases <- read_excel("data/bases_datos.xlsx")
# Convertir la columna "Fuente / Link" en hipervínculo con texto fijo
bases <- bases |>
mutate(
`Fuente / Link` = if_else(
!is.na(`Fuente / Link`) & `Fuente / Link` != "",
sprintf("<a href='%s' target='_blank' rel='noopener'>Enlace</a>", `Fuente / Link`),
""
)
)
# Mostrar tabla interactiva con todas las columnas
datatable(
bases,
escape = FALSE,  # <- necesario para que los <a> funcionen como links
options = list(pageLength = 10, autoWidth = TRUE, scrollX = TRUE)
)
library(readxl)
Ejemplo1 <- read_excel("labs/data_epg/Ejemplo1.xlsx")
View(Ejemplo1)
# Carpeta de datos (ajusta si cambias el nombre)
data_path <- "labs/data_epg"
library(readxl)
Ejemplo1 <- read_excel("labs/data_epg/Ejemplo1.xlsx")
# Carpeta de datos (ajusta si cambias el nombre)
data_path <- "labs/data_epg"
library(readxl)
Ejemplo1 <- read_excel("labs/data_epg/Ejemplo1.xlsx")
# Carpeta de datos (ajusta si cambias el nombre)
data_path <- "labs/data_epg"
library(readxl)
Ejemplo1 <- read_excel(labs/data_epg/Ejemplo1.xlsx)
library(readxl)
bases_datos <- read_excel("datos/data/bases_datos.xlsx",
sheet = "encuestas")
View(bases_datos)
#| message: false
#| warning: false
library(readxl)
library(dplyr)
library(DT)
# Leer el archivo Excel
bases <- read_excel("datos/data/bases_datos.xlsx",
sheet = "encuestas")
#| message: false
#| warning: false
library(readxl)
library(dplyr)
library(DT)
# Leer el archivo Excel
bases <- read_excel("datos/data/bases_datos.xlsx",
sheet = "encuestas")
#| message: false
#| warning: false
library(readxl)
library(dplyr)
library(DT)
# Leer el archivo Excel
bases_ec <- read_excel("datos/data/bases_datos.xlsx",
sheet = "encuestas")
#| message: false
#| warning: false
# Cargar librerías necesarias
library(readxl)
library(dplyr)
library(DT)
# Leer el archivo Excel (verifica la ruta y nombre de la hoja)
bases_ec <- read_excel("datos/data/bases_datos.xlsx", sheet = "encuestas")
#| message: false
#| warning: false
# Cargar librerías necesarias
library(readxl)
library(dplyr)
library(DT)
# Leer el archivo Excel (verifica la ruta y nombre de la hoja)
bases_ec <- read_excel("datos/data/bases_datos.xlsx",
sheet = "encuestas")
#| message: false
#| warning: false
# Cargar librerías necesarias
library(readxl)
library(dplyr)
library(DT)
# Leer el archivo Excel (verifica la ruta y nombre de la hoja)
bases_ec <- read_excel("datos/data/bases_datos.xlsx",
sheet = "encuestas")
#| message: false
#| warning: false
# Cargar librerías necesarias
library(readxl)
library(dplyr)
library(DT)
# Leer el archivo Excel (verifica la ruta y nombre de la hoja)
bases_ec <- read_excel("datos/bases_datos.xlsx",
sheet = "encuestas")
library(readxl)
bases_datos <- read_excel("datos/bases_datos.xlsx",
sheet = "encuestas")
View(bases_datos)
#| message: false
#| warning: false
# Cargar librerías necesarias
library(readxl)
library(dplyr)
library(DT)
# Leer el archivo Excel (verifica la ruta y nombre de la hoja)
bases_ec <- bases_datos
# Convertir la columna "Fuente / Link" en hipervínculo con texto fijo
bases_ec <- bases_ec %>%
mutate(
`Fuente / Link` = if_else(
!is.na(`Fuente / Link`) & `Fuente / Link` != "",
sprintf("<a href='%s' target='_blank' rel='noopener'>Enlace</a>", `Fuente / Link`),
as.character("")  # evita errores de tipo entre string y NA
)
)
# Mostrar tabla interactiva con todas las columnas
datatable(
bases_ec,
escape = FALSE,  # permite mostrar los hipervínculos
options = list(
pageLength = 10,
autoWidth = TRUE,
scrollX = TRUE
)
)
# Leer el archivo Excel (verifica la ruta y nombre de la hoja)
bases_ec <- read_excel("datos/bases_datos.xlsx",
sheet = "encuestas")
View(bases_datos)
# Leer el archivo Excel (verifica la ruta y nombre de la hoja)
bases_ec <- read_excel("datos/bases_datos.xlsx",
sheet = "encuestas")
# Leer el archivo Excel (verifica la ruta y nombre de la hoja)
bases_ec <- read_excel("datos/bases_datos.xlsx",
sheet = "encuestas")
# Leer el archivo Excel (verifica la ruta y nombre de la hoja)
bases_ec <- read_excel("datos/bases_datos.xlsx",
sheet = "encuestas")
#| message: false
#| warning: false
# Cargar librerías necesarias
library(readxl)
library(dplyr)
library(DT)
# Leer el archivo Excel (verifica la ruta y nombre de la hoja)
bases_ec <- read_excel("data/bases_datos.xlsx",
sheet = "encuestas"
# Convertir la columna "Fuente / Link" en hipervínculo con texto fijo
bases_ec <- bases_ec %>%
#| message: false
#| warning: false
# Cargar librerías necesarias
library(readxl)
library(dplyr)
library(DT)
# Leer el archivo Excel (verifica la ruta y nombre de la hoja)
bases_ec <- read_excel("data/bases_datos.xlsx", sheet = "encuestas")
# Convertir la columna "Fuente / Link" en hipervínculo con texto fijo
bases_ec <- bases_ec %>%
mutate(
`Fuente / Link` = if_else(
!is.na(`Fuente / Link`) & `Fuente / Link` != "",
sprintf("<a href='%s' target='_blank' rel='noopener'>Enlace</a>", `Fuente / Link`),
as.character("")  # evita errores de tipo entre string y NA
)
)
# Mostrar tabla interactiva con todas las columnas
datatable(
bases_ec,
escape = FALSE,  # permite mostrar los hipervínculos
options = list(
pageLength = 10,
autoWidth = TRUE,
scrollX = TRUE
)
)
#| message: false
#| warning: false
library(readxl)
library(dplyr)
library(DT)
# Leer el archivo Excel
bases <-read_excel("data/bases_datos.xlsx",
sheet = "otras")
# Convertir la columna "Fuente / Link" en hipervínculo con texto fijo
bases <- bases |>
mutate(
`Fuente / Link` = if_else(
!is.na(`Fuente / Link`) & `Fuente / Link` != "",
sprintf("<a href='%s' target='_blank' rel='noopener'>Enlace</a>", `Fuente / Link`),
""
)
)
# Mostrar tabla interactiva con todas las columnas
datatable(
bases,
escape = FALSE,  # <- necesario para que los <a> funcionen como links
options = list(pageLength = 10, autoWidth = TRUE, scrollX = TRUE)
)
#| message: false
#| warning: false
library(readxl)
library(dplyr)
library(DT)
bases <- read_excel("data/bases_datos.xlsx", sheet = "otras")
bases <- bases %>%
mutate(
`Fuente / Link` = if_else(
!is.na(`Fuente / Link`) & `Fuente / Link` != "",
sprintf("<a href='%s' target='_blank' rel='noopener'>Enlace</a>", `Fuente / Link`),
as.character("")
)
)
datatable(
bases,
escape = FALSE,
options = list(
pageLength = 10,
autoWidth = TRUE,
scrollX = TRUE
)
)
quarto render
